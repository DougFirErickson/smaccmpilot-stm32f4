{-# LANGUAGE DataKinds #-}
{-# LANGUAGE TypeOperators #-}
{-# LANGUAGE TypeFamilies #-}
{-# LANGUAGE FlexibleInstances #-}
{-# LANGUAGE FlexibleContexts #-}
{-# LANGUAGE QuasiQuotes #-}
{-# LANGUAGE MultiParamTypeClasses #-}

-- Autogenerated Mavlink v1.0 implementation: see smavgen_ivory.py

module SMACCMPilot.Mavlink.Messages.LocalPositionNedSystemGlobalOffset where

import Ivory.Language
import Ivory.Serialize
import SMACCMPilot.Mavlink.Send
import SMACCMPilot.Mavlink.Unpack

localPositionNedSystemGlobalOffsetMsgId :: Uint8
localPositionNedSystemGlobalOffsetMsgId = 89

localPositionNedSystemGlobalOffsetCrcExtra :: Uint8
localPositionNedSystemGlobalOffsetCrcExtra = 231

localPositionNedSystemGlobalOffsetModule :: Module
localPositionNedSystemGlobalOffsetModule = package "mavlink_local_position_ned_system_global_offset_msg" $ do
  depend serializeModule
  depend mavlinkSendModule
  incl mkLocalPositionNedSystemGlobalOffsetSender
  incl localPositionNedSystemGlobalOffsetUnpack
  defStruct (Proxy :: Proxy "local_position_ned_system_global_offset_msg")
  wrappedPackMod localPositionNedSystemGlobalOffsetWrapper

[ivory|
struct local_position_ned_system_global_offset_msg
  { time_boot_ms :: Stored Uint32
  ; x :: Stored IFloat
  ; y :: Stored IFloat
  ; z :: Stored IFloat
  ; roll :: Stored IFloat
  ; pitch :: Stored IFloat
  ; yaw :: Stored IFloat
  }
|]

mkLocalPositionNedSystemGlobalOffsetSender ::
  Def ('[ ConstRef s0 (Struct "local_position_ned_system_global_offset_msg")
        , Ref s1 (Stored Uint8) -- seqNum
        , Ref s1 (Struct "mavlinkPacket") -- tx buffer/length
        ] :-> ())
mkLocalPositionNedSystemGlobalOffsetSender = makeMavlinkSender "local_position_ned_system_global_offset_msg" localPositionNedSystemGlobalOffsetMsgId localPositionNedSystemGlobalOffsetCrcExtra

instance MavlinkUnpackableMsg "local_position_ned_system_global_offset_msg" where
    unpackMsg = ( localPositionNedSystemGlobalOffsetUnpack , localPositionNedSystemGlobalOffsetMsgId )

localPositionNedSystemGlobalOffsetUnpack :: Def ('[ Ref s1 (Struct "local_position_ned_system_global_offset_msg")
                             , ConstRef s2 (CArray (Stored Uint8))
                             ] :-> () )
localPositionNedSystemGlobalOffsetUnpack = proc "mavlink_local_position_ned_system_global_offset_unpack" $ \ msg buf -> body $ packGet packRep buf 0 msg

localPositionNedSystemGlobalOffsetWrapper :: WrappedPackRep (Struct "local_position_ned_system_global_offset_msg")
localPositionNedSystemGlobalOffsetWrapper = wrapPackRep "mavlink_local_position_ned_system_global_offset" $ packStruct
  [ packLabel time_boot_ms
  , packLabel x
  , packLabel y
  , packLabel z
  , packLabel roll
  , packLabel pitch
  , packLabel yaw
  ]

instance Packable (Struct "local_position_ned_system_global_offset_msg") where
  packRep = wrappedPackRep localPositionNedSystemGlobalOffsetWrapper
