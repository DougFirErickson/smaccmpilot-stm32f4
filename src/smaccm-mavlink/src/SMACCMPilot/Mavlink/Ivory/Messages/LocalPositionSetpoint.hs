{-# LANGUAGE DataKinds #-}
{-# LANGUAGE TypeOperators #-}
{-# LANGUAGE TypeFamilies #-}
{-# LANGUAGE FlexibleInstances #-}
{-# LANGUAGE FlexibleContexts #-}
{-# LANGUAGE QuasiQuotes #-}
{-# LANGUAGE MultiParamTypeClasses #-}

-- Autogenerated Mavlink v1.0 implementation: see smavgen_ivory.py

module SMACCMPilot.Mavlink.Ivory.Messages.LocalPositionSetpoint where

import Ivory.Language
import Ivory.Serialize
import SMACCMPilot.Mavlink.Ivory.Send
import SMACCMPilot.Mavlink.Ivory.Unpack

localPositionSetpointMsgId :: Uint8
localPositionSetpointMsgId = 51

localPositionSetpointCrcExtra :: Uint8
localPositionSetpointCrcExtra = 223

localPositionSetpointModule :: Module
localPositionSetpointModule = package "mavlink_local_position_setpoint_msg" $ do
  depend serializeModule
  depend mavlinkSendModule
  incl mkLocalPositionSetpointSender
  incl localPositionSetpointUnpack
  defStruct (Proxy :: Proxy "local_position_setpoint_msg")
  wrappedPackMod localPositionSetpointWrapper

[ivory|
struct local_position_setpoint_msg
  { x :: Stored IFloat
  ; y :: Stored IFloat
  ; z :: Stored IFloat
  ; yaw :: Stored IFloat
  ; coordinate_frame :: Stored Uint8
  }
|]

mkLocalPositionSetpointSender ::
  Def ('[ ConstRef s0 (Struct "local_position_setpoint_msg")
        , Ref s1 (Stored Uint8) -- seqNum
        , Ref s1 (Struct "mavlinkPacket") -- tx buffer/length
        ] :-> ())
mkLocalPositionSetpointSender = makeMavlinkSender "local_position_setpoint_msg" localPositionSetpointMsgId localPositionSetpointCrcExtra

instance MavlinkUnpackableMsg "local_position_setpoint_msg" where
    unpackMsg = ( localPositionSetpointUnpack , localPositionSetpointMsgId )

localPositionSetpointUnpack :: Def ('[ Ref s1 (Struct "local_position_setpoint_msg")
                             , ConstRef s2 (CArray (Stored Uint8))
                             ] :-> () )
localPositionSetpointUnpack = proc "mavlink_local_position_setpoint_unpack" $ \ msg buf -> body $ packGet packRep buf 0 msg

localPositionSetpointWrapper :: WrappedPackRep (Struct "local_position_setpoint_msg")
localPositionSetpointWrapper = wrapPackRep "mavlink_local_position_setpoint" $ packStruct
  [ packLabel x
  , packLabel y
  , packLabel z
  , packLabel yaw
  , packLabel coordinate_frame
  ]

instance Packable (Struct "local_position_setpoint_msg") where
  packRep = wrappedPackRep localPositionSetpointWrapper
