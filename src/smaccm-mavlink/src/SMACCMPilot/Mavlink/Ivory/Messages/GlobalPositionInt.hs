{-# LANGUAGE DataKinds #-}
{-# LANGUAGE TypeOperators #-}
{-# LANGUAGE TypeFamilies #-}
{-# LANGUAGE FlexibleInstances #-}
{-# LANGUAGE FlexibleContexts #-}
{-# LANGUAGE QuasiQuotes #-}
{-# LANGUAGE MultiParamTypeClasses #-}

-- Autogenerated Mavlink v1.0 implementation: see smavgen_ivory.py

module SMACCMPilot.Mavlink.Ivory.Messages.GlobalPositionInt where

import Ivory.Language
import Ivory.Serialize
import SMACCMPilot.Mavlink.Ivory.Send
import SMACCMPilot.Mavlink.Ivory.Unpack

globalPositionIntMsgId :: Uint8
globalPositionIntMsgId = 33

globalPositionIntCrcExtra :: Uint8
globalPositionIntCrcExtra = 104

globalPositionIntModule :: Module
globalPositionIntModule = package "mavlink_global_position_int_msg" $ do
  depend serializeModule
  depend mavlinkSendModule
  incl mkGlobalPositionIntSender
  incl globalPositionIntUnpack
  defStruct (Proxy :: Proxy "global_position_int_msg")
  wrappedPackMod globalPositionIntWrapper

[ivory|
struct global_position_int_msg
  { time_boot_ms :: Stored Uint32
  ; lat :: Stored Sint32
  ; lon :: Stored Sint32
  ; alt :: Stored Sint32
  ; relative_alt :: Stored Sint32
  ; vx :: Stored Sint16
  ; vy :: Stored Sint16
  ; vz :: Stored Sint16
  ; hdg :: Stored Uint16
  }
|]

mkGlobalPositionIntSender ::
  Def ('[ ConstRef s0 (Struct "global_position_int_msg")
        , Ref s1 (Stored Uint8) -- seqNum
        , Ref s1 (Struct "mavlinkPacket") -- tx buffer/length
        ] :-> ())
mkGlobalPositionIntSender = makeMavlinkSender "global_position_int_msg" globalPositionIntMsgId globalPositionIntCrcExtra

instance MavlinkUnpackableMsg "global_position_int_msg" where
    unpackMsg = ( globalPositionIntUnpack , globalPositionIntMsgId )

globalPositionIntUnpack :: Def ('[ Ref s1 (Struct "global_position_int_msg")
                             , ConstRef s2 (CArray (Stored Uint8))
                             ] :-> () )
globalPositionIntUnpack = proc "mavlink_global_position_int_unpack" $ \ msg buf -> body $ packGet packRep buf 0 msg

globalPositionIntWrapper :: WrappedPackRep (Struct "global_position_int_msg")
globalPositionIntWrapper = wrapPackRep "mavlink_global_position_int" $ packStruct
  [ packLabel time_boot_ms
  , packLabel lat
  , packLabel lon
  , packLabel alt
  , packLabel relative_alt
  , packLabel vx
  , packLabel vy
  , packLabel vz
  , packLabel hdg
  ]

instance Packable (Struct "global_position_int_msg") where
  packRep = wrappedPackRep globalPositionIntWrapper
