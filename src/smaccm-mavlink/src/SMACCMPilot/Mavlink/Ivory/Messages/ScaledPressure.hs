{-# LANGUAGE DataKinds #-}
{-# LANGUAGE TypeOperators #-}
{-# LANGUAGE TypeFamilies #-}
{-# LANGUAGE FlexibleInstances #-}
{-# LANGUAGE FlexibleContexts #-}
{-# LANGUAGE QuasiQuotes #-}
{-# LANGUAGE MultiParamTypeClasses #-}

-- Autogenerated Mavlink v1.0 implementation: see smavgen_ivory.py

module SMACCMPilot.Mavlink.Ivory.Messages.ScaledPressure where

import Ivory.Language
import Ivory.Serialize
import SMACCMPilot.Mavlink.Ivory.Send
import SMACCMPilot.Mavlink.Ivory.Unpack

scaledPressureMsgId :: Uint8
scaledPressureMsgId = 29

scaledPressureCrcExtra :: Uint8
scaledPressureCrcExtra = 115

scaledPressureModule :: Module
scaledPressureModule = package "mavlink_scaled_pressure_msg" $ do
  depend serializeModule
  depend mavlinkSendModule
  incl mkScaledPressureSender
  incl scaledPressureUnpack
  defStruct (Proxy :: Proxy "scaled_pressure_msg")
  wrappedPackMod scaledPressureWrapper

[ivory|
struct scaled_pressure_msg
  { time_boot_ms :: Stored Uint32
  ; press_abs :: Stored IFloat
  ; press_diff :: Stored IFloat
  ; temperature :: Stored Sint16
  }
|]

mkScaledPressureSender ::
  Def ('[ ConstRef s0 (Struct "scaled_pressure_msg")
        , Ref s1 (Stored Uint8) -- seqNum
        , Ref s1 (Struct "mavlinkPacket") -- tx buffer/length
        ] :-> ())
mkScaledPressureSender = makeMavlinkSender "scaled_pressure_msg" scaledPressureMsgId scaledPressureCrcExtra

instance MavlinkUnpackableMsg "scaled_pressure_msg" where
    unpackMsg = ( scaledPressureUnpack , scaledPressureMsgId )

scaledPressureUnpack :: Def ('[ Ref s1 (Struct "scaled_pressure_msg")
                             , ConstRef s2 (CArray (Stored Uint8))
                             ] :-> () )
scaledPressureUnpack = proc "mavlink_scaled_pressure_unpack" $ \ msg buf -> body $ packGet packRep buf 0 msg

scaledPressureWrapper :: WrappedPackRep (Struct "scaled_pressure_msg")
scaledPressureWrapper = wrapPackRep "mavlink_scaled_pressure" $ packStruct
  [ packLabel time_boot_ms
  , packLabel press_abs
  , packLabel press_diff
  , packLabel temperature
  ]

instance Packable (Struct "scaled_pressure_msg") where
  packRep = wrappedPackRep scaledPressureWrapper
