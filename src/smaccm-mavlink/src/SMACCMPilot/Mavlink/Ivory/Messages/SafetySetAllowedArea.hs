{-# LANGUAGE DataKinds #-}
{-# LANGUAGE TypeOperators #-}
{-# LANGUAGE TypeFamilies #-}
{-# LANGUAGE FlexibleInstances #-}
{-# LANGUAGE FlexibleContexts #-}
{-# LANGUAGE QuasiQuotes #-}
{-# LANGUAGE MultiParamTypeClasses #-}

-- Autogenerated Mavlink v1.0 implementation: see smavgen_ivory.py

module SMACCMPilot.Mavlink.Messages.SafetySetAllowedArea where

import Ivory.Language
import Ivory.Serialize
import SMACCMPilot.Mavlink.Send
import SMACCMPilot.Mavlink.Unpack

safetySetAllowedAreaMsgId :: Uint8
safetySetAllowedAreaMsgId = 54

safetySetAllowedAreaCrcExtra :: Uint8
safetySetAllowedAreaCrcExtra = 15

safetySetAllowedAreaModule :: Module
safetySetAllowedAreaModule = package "mavlink_safety_set_allowed_area_msg" $ do
  depend serializeModule
  depend mavlinkSendModule
  incl mkSafetySetAllowedAreaSender
  incl safetySetAllowedAreaUnpack
  defStruct (Proxy :: Proxy "safety_set_allowed_area_msg")
  wrappedPackMod safetySetAllowedAreaWrapper

[ivory|
struct safety_set_allowed_area_msg
  { p1x :: Stored IFloat
  ; p1y :: Stored IFloat
  ; p1z :: Stored IFloat
  ; p2x :: Stored IFloat
  ; p2y :: Stored IFloat
  ; p2z :: Stored IFloat
  ; target_system :: Stored Uint8
  ; target_component :: Stored Uint8
  ; frame :: Stored Uint8
  }
|]

mkSafetySetAllowedAreaSender ::
  Def ('[ ConstRef s0 (Struct "safety_set_allowed_area_msg")
        , Ref s1 (Stored Uint8) -- seqNum
        , Ref s1 (Struct "mavlinkPacket") -- tx buffer/length
        ] :-> ())
mkSafetySetAllowedAreaSender = makeMavlinkSender "safety_set_allowed_area_msg" safetySetAllowedAreaMsgId safetySetAllowedAreaCrcExtra

instance MavlinkUnpackableMsg "safety_set_allowed_area_msg" where
    unpackMsg = ( safetySetAllowedAreaUnpack , safetySetAllowedAreaMsgId )

safetySetAllowedAreaUnpack :: Def ('[ Ref s1 (Struct "safety_set_allowed_area_msg")
                             , ConstRef s2 (CArray (Stored Uint8))
                             ] :-> () )
safetySetAllowedAreaUnpack = proc "mavlink_safety_set_allowed_area_unpack" $ \ msg buf -> body $ packGet packRep buf 0 msg

safetySetAllowedAreaWrapper :: WrappedPackRep (Struct "safety_set_allowed_area_msg")
safetySetAllowedAreaWrapper = wrapPackRep "mavlink_safety_set_allowed_area" $ packStruct
  [ packLabel p1x
  , packLabel p1y
  , packLabel p1z
  , packLabel p2x
  , packLabel p2y
  , packLabel p2z
  , packLabel target_system
  , packLabel target_component
  , packLabel frame
  ]

instance Packable (Struct "safety_set_allowed_area_msg") where
  packRep = wrappedPackRep safetySetAllowedAreaWrapper
