{-# LANGUAGE DataKinds #-}
{-# LANGUAGE TypeOperators #-}
{-# LANGUAGE TypeFamilies #-}
{-# LANGUAGE FlexibleInstances #-}
{-# LANGUAGE FlexibleContexts #-}
{-# LANGUAGE QuasiQuotes #-}
{-# LANGUAGE MultiParamTypeClasses #-}

-- Autogenerated Mavlink v1.0 implementation: see smavgen_ivory.py

module SMACCMPilot.Mavlink.Messages.HighresImu where

import Ivory.Language
import Ivory.Serialize
import SMACCMPilot.Mavlink.Send
import SMACCMPilot.Mavlink.Unpack

highresImuMsgId :: Uint8
highresImuMsgId = 105

highresImuCrcExtra :: Uint8
highresImuCrcExtra = 93

highresImuModule :: Module
highresImuModule = package "mavlink_highres_imu_msg" $ do
  depend serializeModule
  depend mavlinkSendModule
  incl mkHighresImuSender
  incl highresImuUnpack
  defStruct (Proxy :: Proxy "highres_imu_msg")
  wrappedPackMod highresImuWrapper

[ivory|
struct highres_imu_msg
  { time_usec :: Stored Uint64
  ; xacc :: Stored IFloat
  ; yacc :: Stored IFloat
  ; zacc :: Stored IFloat
  ; xgyro :: Stored IFloat
  ; ygyro :: Stored IFloat
  ; zgyro :: Stored IFloat
  ; xmag :: Stored IFloat
  ; ymag :: Stored IFloat
  ; zmag :: Stored IFloat
  ; abs_pressure :: Stored IFloat
  ; diff_pressure :: Stored IFloat
  ; pressure_alt :: Stored IFloat
  ; temperature :: Stored IFloat
  ; fields_updated :: Stored Uint16
  }
|]

mkHighresImuSender ::
  Def ('[ ConstRef s0 (Struct "highres_imu_msg")
        , Ref s1 (Stored Uint8) -- seqNum
        , Ref s1 (Struct "mavlinkPacket") -- tx buffer/length
        ] :-> ())
mkHighresImuSender = makeMavlinkSender "highres_imu_msg" highresImuMsgId highresImuCrcExtra

instance MavlinkUnpackableMsg "highres_imu_msg" where
    unpackMsg = ( highresImuUnpack , highresImuMsgId )

highresImuUnpack :: Def ('[ Ref s1 (Struct "highres_imu_msg")
                             , ConstRef s2 (CArray (Stored Uint8))
                             ] :-> () )
highresImuUnpack = proc "mavlink_highres_imu_unpack" $ \ msg buf -> body $ packGet packRep buf 0 msg

highresImuWrapper :: WrappedPackRep (Struct "highres_imu_msg")
highresImuWrapper = wrapPackRep "mavlink_highres_imu" $ packStruct
  [ packLabel time_usec
  , packLabel xacc
  , packLabel yacc
  , packLabel zacc
  , packLabel xgyro
  , packLabel ygyro
  , packLabel zgyro
  , packLabel xmag
  , packLabel ymag
  , packLabel zmag
  , packLabel abs_pressure
  , packLabel diff_pressure
  , packLabel pressure_alt
  , packLabel temperature
  , packLabel fields_updated
  ]

instance Packable (Struct "highres_imu_msg") where
  packRep = wrappedPackRep highresImuWrapper
