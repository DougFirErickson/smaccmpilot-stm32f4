{-# LANGUAGE DataKinds #-}
{-# LANGUAGE TypeOperators #-}
{-# LANGUAGE TypeFamilies #-}
{-# LANGUAGE FlexibleInstances #-}
{-# LANGUAGE FlexibleContexts #-}
{-# LANGUAGE QuasiQuotes #-}
{-# LANGUAGE MultiParamTypeClasses #-}

-- Autogenerated Mavlink v1.0 implementation: see smavgen_ivory.py

module SMACCMPilot.Mavlink.Ivory.Messages.MissionRequestList where

import Ivory.Language
import Ivory.Serialize
import SMACCMPilot.Mavlink.Ivory.Send
import SMACCMPilot.Mavlink.Ivory.Unpack

missionRequestListMsgId :: Uint8
missionRequestListMsgId = 43

missionRequestListCrcExtra :: Uint8
missionRequestListCrcExtra = 132

missionRequestListModule :: Module
missionRequestListModule = package "mavlink_mission_request_list_msg" $ do
  depend serializeModule
  depend mavlinkSendModule
  incl mkMissionRequestListSender
  incl missionRequestListUnpack
  defStruct (Proxy :: Proxy "mission_request_list_msg")
  wrappedPackMod missionRequestListWrapper

[ivory|
struct mission_request_list_msg
  { target_system :: Stored Uint8
  ; target_component :: Stored Uint8
  }
|]

mkMissionRequestListSender ::
  Def ('[ ConstRef s0 (Struct "mission_request_list_msg")
        , Ref s1 (Stored Uint8) -- seqNum
        , Ref s1 (Struct "mavlinkPacket") -- tx buffer/length
        ] :-> ())
mkMissionRequestListSender = makeMavlinkSender "mission_request_list_msg" missionRequestListMsgId missionRequestListCrcExtra

instance MavlinkUnpackableMsg "mission_request_list_msg" where
    unpackMsg = ( missionRequestListUnpack , missionRequestListMsgId )

missionRequestListUnpack :: Def ('[ Ref s1 (Struct "mission_request_list_msg")
                             , ConstRef s2 (CArray (Stored Uint8))
                             ] :-> () )
missionRequestListUnpack = proc "mavlink_mission_request_list_unpack" $ \ msg buf -> body $ packGet packRep buf 0 msg

missionRequestListWrapper :: WrappedPackRep (Struct "mission_request_list_msg")
missionRequestListWrapper = wrapPackRep "mavlink_mission_request_list" $ packStruct
  [ packLabel target_system
  , packLabel target_component
  ]

instance Packable (Struct "mission_request_list_msg") where
  packRep = wrappedPackRep missionRequestListWrapper
