{-# LANGUAGE DataKinds #-}
{-# LANGUAGE TypeOperators #-}
{-# LANGUAGE TypeFamilies #-}
{-# LANGUAGE FlexibleInstances #-}
{-# LANGUAGE FlexibleContexts #-}
{-# LANGUAGE QuasiQuotes #-}
{-# LANGUAGE MultiParamTypeClasses #-}

-- Autogenerated Mavlink v1.0 implementation: see smavgen_ivory.py

module SMACCMPilot.Mavlink.Messages.SetQuadSwarmRollPitchYawThrust where

import Ivory.Language
import Ivory.Serialize
import SMACCMPilot.Mavlink.Send
import SMACCMPilot.Mavlink.Unpack

setQuadSwarmRollPitchYawThrustMsgId :: Uint8
setQuadSwarmRollPitchYawThrustMsgId = 61

setQuadSwarmRollPitchYawThrustCrcExtra :: Uint8
setQuadSwarmRollPitchYawThrustCrcExtra = 240

setQuadSwarmRollPitchYawThrustModule :: Module
setQuadSwarmRollPitchYawThrustModule = package "mavlink_set_quad_swarm_roll_pitch_yaw_thrust_msg" $ do
  depend serializeModule
  depend mavlinkSendModule
  incl mkSetQuadSwarmRollPitchYawThrustSender
  incl setQuadSwarmRollPitchYawThrustUnpack
  defStruct (Proxy :: Proxy "set_quad_swarm_roll_pitch_yaw_thrust_msg")
  wrappedPackMod setQuadSwarmRollPitchYawThrustWrapper

[ivory|
struct set_quad_swarm_roll_pitch_yaw_thrust_msg
  { roll :: Array 4 (Stored Sint16)
  ; pitch :: Array 4 (Stored Sint16)
  ; yaw :: Array 4 (Stored Sint16)
  ; thrust :: Array 4 (Stored Uint16)
  ; group :: Stored Uint8
  ; mode :: Stored Uint8
  }
|]

mkSetQuadSwarmRollPitchYawThrustSender ::
  Def ('[ ConstRef s0 (Struct "set_quad_swarm_roll_pitch_yaw_thrust_msg")
        , Ref s1 (Stored Uint8) -- seqNum
        , Ref s1 (Struct "mavlinkPacket") -- tx buffer/length
        ] :-> ())
mkSetQuadSwarmRollPitchYawThrustSender = makeMavlinkSender "set_quad_swarm_roll_pitch_yaw_thrust_msg" setQuadSwarmRollPitchYawThrustMsgId setQuadSwarmRollPitchYawThrustCrcExtra

instance MavlinkUnpackableMsg "set_quad_swarm_roll_pitch_yaw_thrust_msg" where
    unpackMsg = ( setQuadSwarmRollPitchYawThrustUnpack , setQuadSwarmRollPitchYawThrustMsgId )

setQuadSwarmRollPitchYawThrustUnpack :: Def ('[ Ref s1 (Struct "set_quad_swarm_roll_pitch_yaw_thrust_msg")
                             , ConstRef s2 (CArray (Stored Uint8))
                             ] :-> () )
setQuadSwarmRollPitchYawThrustUnpack = proc "mavlink_set_quad_swarm_roll_pitch_yaw_thrust_unpack" $ \ msg buf -> body $ packGet packRep buf 0 msg

setQuadSwarmRollPitchYawThrustWrapper :: WrappedPackRep (Struct "set_quad_swarm_roll_pitch_yaw_thrust_msg")
setQuadSwarmRollPitchYawThrustWrapper = wrapPackRep "mavlink_set_quad_swarm_roll_pitch_yaw_thrust" $ packStruct
  [ packLabel roll
  , packLabel pitch
  , packLabel yaw
  , packLabel thrust
  , packLabel group
  , packLabel mode
  ]

instance Packable (Struct "set_quad_swarm_roll_pitch_yaw_thrust_msg") where
  packRep = wrappedPackRep setQuadSwarmRollPitchYawThrustWrapper
