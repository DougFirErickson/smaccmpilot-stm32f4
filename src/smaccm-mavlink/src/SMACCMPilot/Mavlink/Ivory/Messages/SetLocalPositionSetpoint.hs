{-# LANGUAGE DataKinds #-}
{-# LANGUAGE TypeOperators #-}
{-# LANGUAGE TypeFamilies #-}
{-# LANGUAGE FlexibleInstances #-}
{-# LANGUAGE FlexibleContexts #-}
{-# LANGUAGE QuasiQuotes #-}
{-# LANGUAGE MultiParamTypeClasses #-}

-- Autogenerated Mavlink v1.0 implementation: see smavgen_ivory.py

module SMACCMPilot.Mavlink.Messages.SetLocalPositionSetpoint where

import Ivory.Language
import Ivory.Serialize
import SMACCMPilot.Mavlink.Send
import SMACCMPilot.Mavlink.Unpack

setLocalPositionSetpointMsgId :: Uint8
setLocalPositionSetpointMsgId = 50

setLocalPositionSetpointCrcExtra :: Uint8
setLocalPositionSetpointCrcExtra = 214

setLocalPositionSetpointModule :: Module
setLocalPositionSetpointModule = package "mavlink_set_local_position_setpoint_msg" $ do
  depend serializeModule
  depend mavlinkSendModule
  incl mkSetLocalPositionSetpointSender
  incl setLocalPositionSetpointUnpack
  defStruct (Proxy :: Proxy "set_local_position_setpoint_msg")
  wrappedPackMod setLocalPositionSetpointWrapper

[ivory|
struct set_local_position_setpoint_msg
  { x :: Stored IFloat
  ; y :: Stored IFloat
  ; z :: Stored IFloat
  ; yaw :: Stored IFloat
  ; target_system :: Stored Uint8
  ; target_component :: Stored Uint8
  ; coordinate_frame :: Stored Uint8
  }
|]

mkSetLocalPositionSetpointSender ::
  Def ('[ ConstRef s0 (Struct "set_local_position_setpoint_msg")
        , Ref s1 (Stored Uint8) -- seqNum
        , Ref s1 (Struct "mavlinkPacket") -- tx buffer/length
        ] :-> ())
mkSetLocalPositionSetpointSender = makeMavlinkSender "set_local_position_setpoint_msg" setLocalPositionSetpointMsgId setLocalPositionSetpointCrcExtra

instance MavlinkUnpackableMsg "set_local_position_setpoint_msg" where
    unpackMsg = ( setLocalPositionSetpointUnpack , setLocalPositionSetpointMsgId )

setLocalPositionSetpointUnpack :: Def ('[ Ref s1 (Struct "set_local_position_setpoint_msg")
                             , ConstRef s2 (CArray (Stored Uint8))
                             ] :-> () )
setLocalPositionSetpointUnpack = proc "mavlink_set_local_position_setpoint_unpack" $ \ msg buf -> body $ packGet packRep buf 0 msg

setLocalPositionSetpointWrapper :: WrappedPackRep (Struct "set_local_position_setpoint_msg")
setLocalPositionSetpointWrapper = wrapPackRep "mavlink_set_local_position_setpoint" $ packStruct
  [ packLabel x
  , packLabel y
  , packLabel z
  , packLabel yaw
  , packLabel target_system
  , packLabel target_component
  , packLabel coordinate_frame
  ]

instance Packable (Struct "set_local_position_setpoint_msg") where
  packRep = wrappedPackRep setLocalPositionSetpointWrapper
