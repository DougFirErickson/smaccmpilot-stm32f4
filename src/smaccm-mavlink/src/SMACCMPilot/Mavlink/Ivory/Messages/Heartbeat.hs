{-# LANGUAGE DataKinds #-}
{-# LANGUAGE TypeOperators #-}
{-# LANGUAGE TypeFamilies #-}
{-# LANGUAGE FlexibleInstances #-}
{-# LANGUAGE FlexibleContexts #-}
{-# LANGUAGE QuasiQuotes #-}
{-# LANGUAGE MultiParamTypeClasses #-}

-- Autogenerated Mavlink v1.0 implementation: see smavgen_ivory.py

module SMACCMPilot.Mavlink.Messages.Heartbeat where

import Ivory.Language
import Ivory.Serialize
import SMACCMPilot.Mavlink.Send
import SMACCMPilot.Mavlink.Unpack

heartbeatMsgId :: Uint8
heartbeatMsgId = 0

heartbeatCrcExtra :: Uint8
heartbeatCrcExtra = 50

heartbeatModule :: Module
heartbeatModule = package "mavlink_heartbeat_msg" $ do
  depend serializeModule
  depend mavlinkSendModule
  incl mkHeartbeatSender
  incl heartbeatUnpack
  defStruct (Proxy :: Proxy "heartbeat_msg")
  wrappedPackMod heartbeatWrapper

[ivory|
struct heartbeat_msg
  { custom_mode :: Stored Uint32
  ; mavtype :: Stored Uint8
  ; autopilot :: Stored Uint8
  ; base_mode :: Stored Uint8
  ; system_status :: Stored Uint8
  ; mavlink_version :: Stored Uint8
  }
|]

mkHeartbeatSender ::
  Def ('[ ConstRef s0 (Struct "heartbeat_msg")
        , Ref s1 (Stored Uint8) -- seqNum
        , Ref s1 (Struct "mavlinkPacket") -- tx buffer/length
        ] :-> ())
mkHeartbeatSender = makeMavlinkSender "heartbeat_msg" heartbeatMsgId heartbeatCrcExtra

instance MavlinkUnpackableMsg "heartbeat_msg" where
    unpackMsg = ( heartbeatUnpack , heartbeatMsgId )

heartbeatUnpack :: Def ('[ Ref s1 (Struct "heartbeat_msg")
                             , ConstRef s2 (CArray (Stored Uint8))
                             ] :-> () )
heartbeatUnpack = proc "mavlink_heartbeat_unpack" $ \ msg buf -> body $ packGet packRep buf 0 msg

heartbeatWrapper :: WrappedPackRep (Struct "heartbeat_msg")
heartbeatWrapper = wrapPackRep "mavlink_heartbeat" $ packStruct
  [ packLabel custom_mode
  , packLabel mavtype
  , packLabel autopilot
  , packLabel base_mode
  , packLabel system_status
  , packLabel mavlink_version
  ]

instance Packable (Struct "heartbeat_msg") where
  packRep = wrappedPackRep heartbeatWrapper
