{-# LANGUAGE DataKinds #-}
{-# LANGUAGE TypeOperators #-}
{-# LANGUAGE TypeFamilies #-}
{-# LANGUAGE FlexibleInstances #-}
{-# LANGUAGE FlexibleContexts #-}
{-# LANGUAGE QuasiQuotes #-}
{-# LANGUAGE MultiParamTypeClasses #-}

-- Autogenerated Mavlink v1.0 implementation: see smavgen_ivory.py

module SMACCMPilot.Mavlink.Ivory.Messages.HilState where

import Ivory.Language
import Ivory.Serialize
import SMACCMPilot.Mavlink.Ivory.Send
import SMACCMPilot.Mavlink.Ivory.Unpack

hilStateMsgId :: Uint8
hilStateMsgId = 90

hilStateCrcExtra :: Uint8
hilStateCrcExtra = 183

hilStateModule :: Module
hilStateModule = package "mavlink_hil_state_msg" $ do
  depend serializeModule
  depend mavlinkSendModule
  incl mkHilStateSender
  incl hilStateUnpack
  defStruct (Proxy :: Proxy "hil_state_msg")
  wrappedPackMod hilStateWrapper

[ivory|
struct hil_state_msg
  { time_usec :: Stored Uint64
  ; roll :: Stored IFloat
  ; pitch :: Stored IFloat
  ; yaw :: Stored IFloat
  ; rollspeed :: Stored IFloat
  ; pitchspeed :: Stored IFloat
  ; yawspeed :: Stored IFloat
  ; lat :: Stored Sint32
  ; lon :: Stored Sint32
  ; alt :: Stored Sint32
  ; vx :: Stored Sint16
  ; vy :: Stored Sint16
  ; vz :: Stored Sint16
  ; xacc :: Stored Sint16
  ; yacc :: Stored Sint16
  ; zacc :: Stored Sint16
  }
|]

mkHilStateSender ::
  Def ('[ ConstRef s0 (Struct "hil_state_msg")
        , Ref s1 (Stored Uint8) -- seqNum
        , Ref s1 (Struct "mavlinkPacket") -- tx buffer/length
        ] :-> ())
mkHilStateSender = makeMavlinkSender "hil_state_msg" hilStateMsgId hilStateCrcExtra

instance MavlinkUnpackableMsg "hil_state_msg" where
    unpackMsg = ( hilStateUnpack , hilStateMsgId )

hilStateUnpack :: Def ('[ Ref s1 (Struct "hil_state_msg")
                             , ConstRef s2 (CArray (Stored Uint8))
                             ] :-> () )
hilStateUnpack = proc "mavlink_hil_state_unpack" $ \ msg buf -> body $ packGet packRep buf 0 msg

hilStateWrapper :: WrappedPackRep (Struct "hil_state_msg")
hilStateWrapper = wrapPackRep "mavlink_hil_state" $ packStruct
  [ packLabel time_usec
  , packLabel roll
  , packLabel pitch
  , packLabel yaw
  , packLabel rollspeed
  , packLabel pitchspeed
  , packLabel yawspeed
  , packLabel lat
  , packLabel lon
  , packLabel alt
  , packLabel vx
  , packLabel vy
  , packLabel vz
  , packLabel xacc
  , packLabel yacc
  , packLabel zacc
  ]

instance Packable (Struct "hil_state_msg") where
  packRep = wrappedPackRep hilStateWrapper
