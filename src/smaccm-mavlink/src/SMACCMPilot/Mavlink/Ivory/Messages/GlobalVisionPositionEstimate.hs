{-# LANGUAGE DataKinds #-}
{-# LANGUAGE TypeOperators #-}
{-# LANGUAGE TypeFamilies #-}
{-# LANGUAGE FlexibleInstances #-}
{-# LANGUAGE FlexibleContexts #-}
{-# LANGUAGE QuasiQuotes #-}
{-# LANGUAGE MultiParamTypeClasses #-}

-- Autogenerated Mavlink v1.0 implementation: see smavgen_ivory.py

module SMACCMPilot.Mavlink.Ivory.Messages.GlobalVisionPositionEstimate where

import Ivory.Language
import Ivory.Serialize
import SMACCMPilot.Mavlink.Ivory.Send
import SMACCMPilot.Mavlink.Ivory.Unpack

globalVisionPositionEstimateMsgId :: Uint8
globalVisionPositionEstimateMsgId = 101

globalVisionPositionEstimateCrcExtra :: Uint8
globalVisionPositionEstimateCrcExtra = 102

globalVisionPositionEstimateModule :: Module
globalVisionPositionEstimateModule = package "mavlink_global_vision_position_estimate_msg" $ do
  depend serializeModule
  depend mavlinkSendModule
  incl mkGlobalVisionPositionEstimateSender
  incl globalVisionPositionEstimateUnpack
  defStruct (Proxy :: Proxy "global_vision_position_estimate_msg")
  wrappedPackMod globalVisionPositionEstimateWrapper

[ivory|
struct global_vision_position_estimate_msg
  { usec :: Stored Uint64
  ; x :: Stored IFloat
  ; y :: Stored IFloat
  ; z :: Stored IFloat
  ; roll :: Stored IFloat
  ; pitch :: Stored IFloat
  ; yaw :: Stored IFloat
  }
|]

mkGlobalVisionPositionEstimateSender ::
  Def ('[ ConstRef s0 (Struct "global_vision_position_estimate_msg")
        , Ref s1 (Stored Uint8) -- seqNum
        , Ref s1 (Struct "mavlinkPacket") -- tx buffer/length
        ] :-> ())
mkGlobalVisionPositionEstimateSender = makeMavlinkSender "global_vision_position_estimate_msg" globalVisionPositionEstimateMsgId globalVisionPositionEstimateCrcExtra

instance MavlinkUnpackableMsg "global_vision_position_estimate_msg" where
    unpackMsg = ( globalVisionPositionEstimateUnpack , globalVisionPositionEstimateMsgId )

globalVisionPositionEstimateUnpack :: Def ('[ Ref s1 (Struct "global_vision_position_estimate_msg")
                             , ConstRef s2 (CArray (Stored Uint8))
                             ] :-> () )
globalVisionPositionEstimateUnpack = proc "mavlink_global_vision_position_estimate_unpack" $ \ msg buf -> body $ packGet packRep buf 0 msg

globalVisionPositionEstimateWrapper :: WrappedPackRep (Struct "global_vision_position_estimate_msg")
globalVisionPositionEstimateWrapper = wrapPackRep "mavlink_global_vision_position_estimate" $ packStruct
  [ packLabel usec
  , packLabel x
  , packLabel y
  , packLabel z
  , packLabel roll
  , packLabel pitch
  , packLabel yaw
  ]

instance Packable (Struct "global_vision_position_estimate_msg") where
  packRep = wrappedPackRep globalVisionPositionEstimateWrapper
