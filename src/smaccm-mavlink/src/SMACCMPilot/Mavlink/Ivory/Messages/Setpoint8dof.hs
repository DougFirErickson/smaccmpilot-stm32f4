{-# LANGUAGE DataKinds #-}
{-# LANGUAGE TypeOperators #-}
{-# LANGUAGE TypeFamilies #-}
{-# LANGUAGE FlexibleInstances #-}
{-# LANGUAGE FlexibleContexts #-}
{-# LANGUAGE QuasiQuotes #-}
{-# LANGUAGE MultiParamTypeClasses #-}

-- Autogenerated Mavlink v1.0 implementation: see smavgen_ivory.py

module SMACCMPilot.Mavlink.Ivory.Messages.Setpoint8dof where

import Ivory.Language
import Ivory.Serialize
import SMACCMPilot.Mavlink.Ivory.Send
import SMACCMPilot.Mavlink.Ivory.Unpack

setpoint8dofMsgId :: Uint8
setpoint8dofMsgId = 148

setpoint8dofCrcExtra :: Uint8
setpoint8dofCrcExtra = 241

setpoint8dofModule :: Module
setpoint8dofModule = package "mavlink_setpoint_8dof_msg" $ do
  depend serializeModule
  depend mavlinkSendModule
  incl mkSetpoint8dofSender
  incl setpoint8dofUnpack
  defStruct (Proxy :: Proxy "setpoint_8dof_msg")
  wrappedPackMod setpoint8dofWrapper

[ivory|
struct setpoint_8dof_msg
  { val1 :: Stored IFloat
  ; val2 :: Stored IFloat
  ; val3 :: Stored IFloat
  ; val4 :: Stored IFloat
  ; val5 :: Stored IFloat
  ; val6 :: Stored IFloat
  ; val7 :: Stored IFloat
  ; val8 :: Stored IFloat
  ; target_system :: Stored Uint8
  }
|]

mkSetpoint8dofSender ::
  Def ('[ ConstRef s0 (Struct "setpoint_8dof_msg")
        , Ref s1 (Stored Uint8) -- seqNum
        , Ref s1 (Struct "mavlinkPacket") -- tx buffer/length
        ] :-> ())
mkSetpoint8dofSender = makeMavlinkSender "setpoint_8dof_msg" setpoint8dofMsgId setpoint8dofCrcExtra

instance MavlinkUnpackableMsg "setpoint_8dof_msg" where
    unpackMsg = ( setpoint8dofUnpack , setpoint8dofMsgId )

setpoint8dofUnpack :: Def ('[ Ref s1 (Struct "setpoint_8dof_msg")
                             , ConstRef s2 (CArray (Stored Uint8))
                             ] :-> () )
setpoint8dofUnpack = proc "mavlink_setpoint_8dof_unpack" $ \ msg buf -> body $ packGet packRep buf 0 msg

setpoint8dofWrapper :: WrappedPackRep (Struct "setpoint_8dof_msg")
setpoint8dofWrapper = wrapPackRep "mavlink_setpoint_8dof" $ packStruct
  [ packLabel val1
  , packLabel val2
  , packLabel val3
  , packLabel val4
  , packLabel val5
  , packLabel val6
  , packLabel val7
  , packLabel val8
  , packLabel target_system
  ]

instance Packable (Struct "setpoint_8dof_msg") where
  packRep = wrappedPackRep setpoint8dofWrapper
