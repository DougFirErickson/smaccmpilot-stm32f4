{-# LANGUAGE DataKinds #-}
{-# LANGUAGE TypeOperators #-}
{-# LANGUAGE TypeFamilies #-}
{-# LANGUAGE FlexibleInstances #-}
{-# LANGUAGE FlexibleContexts #-}
{-# LANGUAGE QuasiQuotes #-}
{-# LANGUAGE MultiParamTypeClasses #-}

-- Autogenerated Mavlink v1.0 implementation: see smavgen_ivory.py

module SMACCMPilot.Mavlink.Messages.MissionClearAll where

import Ivory.Language
import Ivory.Serialize
import SMACCMPilot.Mavlink.Send
import SMACCMPilot.Mavlink.Unpack

missionClearAllMsgId :: Uint8
missionClearAllMsgId = 45

missionClearAllCrcExtra :: Uint8
missionClearAllCrcExtra = 232

missionClearAllModule :: Module
missionClearAllModule = package "mavlink_mission_clear_all_msg" $ do
  depend serializeModule
  depend mavlinkSendModule
  incl mkMissionClearAllSender
  incl missionClearAllUnpack
  defStruct (Proxy :: Proxy "mission_clear_all_msg")
  wrappedPackMod missionClearAllWrapper

[ivory|
struct mission_clear_all_msg
  { target_system :: Stored Uint8
  ; target_component :: Stored Uint8
  }
|]

mkMissionClearAllSender ::
  Def ('[ ConstRef s0 (Struct "mission_clear_all_msg")
        , Ref s1 (Stored Uint8) -- seqNum
        , Ref s1 (Struct "mavlinkPacket") -- tx buffer/length
        ] :-> ())
mkMissionClearAllSender = makeMavlinkSender "mission_clear_all_msg" missionClearAllMsgId missionClearAllCrcExtra

instance MavlinkUnpackableMsg "mission_clear_all_msg" where
    unpackMsg = ( missionClearAllUnpack , missionClearAllMsgId )

missionClearAllUnpack :: Def ('[ Ref s1 (Struct "mission_clear_all_msg")
                             , ConstRef s2 (CArray (Stored Uint8))
                             ] :-> () )
missionClearAllUnpack = proc "mavlink_mission_clear_all_unpack" $ \ msg buf -> body $ packGet packRep buf 0 msg

missionClearAllWrapper :: WrappedPackRep (Struct "mission_clear_all_msg")
missionClearAllWrapper = wrapPackRep "mavlink_mission_clear_all" $ packStruct
  [ packLabel target_system
  , packLabel target_component
  ]

instance Packable (Struct "mission_clear_all_msg") where
  packRep = wrappedPackRep missionClearAllWrapper
