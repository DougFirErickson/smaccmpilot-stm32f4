{-# LANGUAGE DataKinds #-}
{-# LANGUAGE TypeOperators #-}
{-# LANGUAGE TypeFamilies #-}
{-# LANGUAGE FlexibleInstances #-}
{-# LANGUAGE FlexibleContexts #-}
{-# LANGUAGE QuasiQuotes #-}
{-# LANGUAGE MultiParamTypeClasses #-}

-- Autogenerated Mavlink v1.0 implementation: see smavgen_ivory.py

module SMACCMPilot.Mavlink.Messages.RollPitchYawSpeedThrustSetpoint where

import Ivory.Language
import Ivory.Serialize
import SMACCMPilot.Mavlink.Send
import SMACCMPilot.Mavlink.Unpack

rollPitchYawSpeedThrustSetpointMsgId :: Uint8
rollPitchYawSpeedThrustSetpointMsgId = 59

rollPitchYawSpeedThrustSetpointCrcExtra :: Uint8
rollPitchYawSpeedThrustSetpointCrcExtra = 238

rollPitchYawSpeedThrustSetpointModule :: Module
rollPitchYawSpeedThrustSetpointModule = package "mavlink_roll_pitch_yaw_speed_thrust_setpoint_msg" $ do
  depend serializeModule
  depend mavlinkSendModule
  incl mkRollPitchYawSpeedThrustSetpointSender
  incl rollPitchYawSpeedThrustSetpointUnpack
  defStruct (Proxy :: Proxy "roll_pitch_yaw_speed_thrust_setpoint_msg")
  incl rollPitchYawSpeedThrustSetpointPackRef
  incl rollPitchYawSpeedThrustSetpointUnpackRef

[ivory|
struct roll_pitch_yaw_speed_thrust_setpoint_msg
  { time_boot_ms :: Stored Uint32
  ; roll_speed :: Stored IFloat
  ; pitch_speed :: Stored IFloat
  ; yaw_speed :: Stored IFloat
  ; thrust :: Stored IFloat
  }
|]

mkRollPitchYawSpeedThrustSetpointSender ::
  Def ('[ ConstRef s0 (Struct "roll_pitch_yaw_speed_thrust_setpoint_msg")
        , Ref s1 (Stored Uint8) -- seqNum
        , Ref s1 (Struct "mavlinkPacket") -- tx buffer/length
        ] :-> ())
mkRollPitchYawSpeedThrustSetpointSender = makeMavlinkSender "roll_pitch_yaw_speed_thrust_setpoint_msg" rollPitchYawSpeedThrustSetpointMsgId rollPitchYawSpeedThrustSetpointCrcExtra

instance MavlinkUnpackableMsg "roll_pitch_yaw_speed_thrust_setpoint_msg" where
    unpackMsg = ( rollPitchYawSpeedThrustSetpointUnpack , rollPitchYawSpeedThrustSetpointMsgId )

rollPitchYawSpeedThrustSetpointUnpack :: Def ('[ Ref s1 (Struct "roll_pitch_yaw_speed_thrust_setpoint_msg")
                             , ConstRef s2 (CArray (Stored Uint8))
                             ] :-> () )
rollPitchYawSpeedThrustSetpointUnpack = proc "mavlink_roll_pitch_yaw_speed_thrust_setpoint_unpack" $ \ msg buf -> body $ unpackRef buf 0 msg

rollPitchYawSpeedThrustSetpointPackRef :: Def ('[ Ref s1 (CArray (Stored Uint8))
                              , Uint32
                              , ConstRef s2 (Struct "roll_pitch_yaw_speed_thrust_setpoint_msg")
                              ] :-> () )
rollPitchYawSpeedThrustSetpointPackRef = proc "mavlink_roll_pitch_yaw_speed_thrust_setpoint_pack_ref" $ \ buf off msg -> body $ do
  packRef buf (off + 0) (msg ~> time_boot_ms)
  packRef buf (off + 4) (msg ~> roll_speed)
  packRef buf (off + 8) (msg ~> pitch_speed)
  packRef buf (off + 12) (msg ~> yaw_speed)
  packRef buf (off + 16) (msg ~> thrust)

rollPitchYawSpeedThrustSetpointUnpackRef :: Def ('[ ConstRef s1 (CArray (Stored Uint8))
                                , Uint32
                                , Ref s2 (Struct "roll_pitch_yaw_speed_thrust_setpoint_msg")
                                ] :-> () )
rollPitchYawSpeedThrustSetpointUnpackRef = proc "mavlink_roll_pitch_yaw_speed_thrust_setpoint_unpack_ref" $ \ buf off msg -> body $ do
  unpackRef buf (off + 0) (msg ~> time_boot_ms)
  unpackRef buf (off + 4) (msg ~> roll_speed)
  unpackRef buf (off + 8) (msg ~> pitch_speed)
  unpackRef buf (off + 12) (msg ~> yaw_speed)
  unpackRef buf (off + 16) (msg ~> thrust)

instance SerializableRef (Struct "roll_pitch_yaw_speed_thrust_setpoint_msg") where
  packRef = call_ rollPitchYawSpeedThrustSetpointPackRef
  unpackRef = call_ rollPitchYawSpeedThrustSetpointUnpackRef
