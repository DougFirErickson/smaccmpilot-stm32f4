{-# LANGUAGE DataKinds #-}
{-# LANGUAGE TypeOperators #-}
{-# LANGUAGE TypeFamilies #-}
{-# LANGUAGE FlexibleInstances #-}
{-# LANGUAGE FlexibleContexts #-}
{-# LANGUAGE QuasiQuotes #-}
{-# LANGUAGE MultiParamTypeClasses #-}

-- Autogenerated Mavlink v1.0 implementation: see smavgen_ivory.py

module SMACCMPilot.Mavlink.Messages.GlobalPositionSetpointInt where

import Ivory.Language
import Ivory.Serialize
import SMACCMPilot.Mavlink.Send
import SMACCMPilot.Mavlink.Unpack

globalPositionSetpointIntMsgId :: Uint8
globalPositionSetpointIntMsgId = 52

globalPositionSetpointIntCrcExtra :: Uint8
globalPositionSetpointIntCrcExtra = 141

globalPositionSetpointIntModule :: Module
globalPositionSetpointIntModule = package "mavlink_global_position_setpoint_int_msg" $ do
  depend serializeModule
  depend mavlinkSendModule
  incl mkGlobalPositionSetpointIntSender
  incl globalPositionSetpointIntUnpack
  defStruct (Proxy :: Proxy "global_position_setpoint_int_msg")
  incl globalPositionSetpointIntPackRef
  incl globalPositionSetpointIntUnpackRef

[ivory|
struct global_position_setpoint_int_msg
  { latitude :: Stored Sint32
  ; longitude :: Stored Sint32
  ; altitude :: Stored Sint32
  ; yaw :: Stored Sint16
  ; coordinate_frame :: Stored Uint8
  }
|]

mkGlobalPositionSetpointIntSender ::
  Def ('[ ConstRef s0 (Struct "global_position_setpoint_int_msg")
        , Ref s1 (Stored Uint8) -- seqNum
        , Ref s1 (Struct "mavlinkPacket") -- tx buffer/length
        ] :-> ())
mkGlobalPositionSetpointIntSender = makeMavlinkSender "global_position_setpoint_int_msg" globalPositionSetpointIntMsgId globalPositionSetpointIntCrcExtra

instance MavlinkUnpackableMsg "global_position_setpoint_int_msg" where
    unpackMsg = ( globalPositionSetpointIntUnpack , globalPositionSetpointIntMsgId )

globalPositionSetpointIntUnpack :: Def ('[ Ref s1 (Struct "global_position_setpoint_int_msg")
                             , ConstRef s2 (CArray (Stored Uint8))
                             ] :-> () )
globalPositionSetpointIntUnpack = proc "mavlink_global_position_setpoint_int_unpack" $ \ msg buf -> body $ unpackRef buf 0 msg

globalPositionSetpointIntPackRef :: Def ('[ Ref s1 (CArray (Stored Uint8))
                              , Uint32
                              , ConstRef s2 (Struct "global_position_setpoint_int_msg")
                              ] :-> () )
globalPositionSetpointIntPackRef = proc "mavlink_global_position_setpoint_int_pack_ref" $ \ buf off msg -> body $ do
  packRef buf (off + 0) (msg ~> latitude)
  packRef buf (off + 4) (msg ~> longitude)
  packRef buf (off + 8) (msg ~> altitude)
  packRef buf (off + 12) (msg ~> yaw)
  packRef buf (off + 14) (msg ~> coordinate_frame)

globalPositionSetpointIntUnpackRef :: Def ('[ ConstRef s1 (CArray (Stored Uint8))
                                , Uint32
                                , Ref s2 (Struct "global_position_setpoint_int_msg")
                                ] :-> () )
globalPositionSetpointIntUnpackRef = proc "mavlink_global_position_setpoint_int_unpack_ref" $ \ buf off msg -> body $ do
  unpackRef buf (off + 0) (msg ~> latitude)
  unpackRef buf (off + 4) (msg ~> longitude)
  unpackRef buf (off + 8) (msg ~> altitude)
  unpackRef buf (off + 12) (msg ~> yaw)
  unpackRef buf (off + 14) (msg ~> coordinate_frame)

instance SerializableRef (Struct "global_position_setpoint_int_msg") where
  packRef = call_ globalPositionSetpointIntPackRef
  unpackRef = call_ globalPositionSetpointIntUnpackRef
