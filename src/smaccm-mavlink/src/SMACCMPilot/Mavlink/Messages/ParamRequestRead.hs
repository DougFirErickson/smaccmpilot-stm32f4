{-# LANGUAGE DataKinds #-}
{-# LANGUAGE TypeOperators #-}
{-# LANGUAGE TypeFamilies #-}
{-# LANGUAGE FlexibleInstances #-}
{-# LANGUAGE FlexibleContexts #-}
{-# LANGUAGE QuasiQuotes #-}
{-# LANGUAGE MultiParamTypeClasses #-}

-- Autogenerated Mavlink v1.0 implementation: see smavgen_ivory.py

module SMACCMPilot.Mavlink.Messages.ParamRequestRead where

import Ivory.Language
import Ivory.Serialize
import SMACCMPilot.Mavlink.Send
import SMACCMPilot.Mavlink.Unpack

paramRequestReadMsgId :: Uint8
paramRequestReadMsgId = 20

paramRequestReadCrcExtra :: Uint8
paramRequestReadCrcExtra = 214

paramRequestReadModule :: Module
paramRequestReadModule = package "mavlink_param_request_read_msg" $ do
  depend serializeModule
  depend mavlinkSendModule
  incl mkParamRequestReadSender
  incl paramRequestReadUnpack
  defStruct (Proxy :: Proxy "param_request_read_msg")
  incl paramRequestReadPackRef
  incl paramRequestReadUnpackRef

[ivory|
struct param_request_read_msg
  { param_index :: Stored Sint16
  ; target_system :: Stored Uint8
  ; target_component :: Stored Uint8
  ; param_id :: Array 16 (Stored Uint8)
  }
|]

mkParamRequestReadSender ::
  Def ('[ ConstRef s0 (Struct "param_request_read_msg")
        , Ref s1 (Stored Uint8) -- seqNum
        , Ref s1 (Struct "mavlinkPacket") -- tx buffer/length
        ] :-> ())
mkParamRequestReadSender = makeMavlinkSender "param_request_read_msg" paramRequestReadMsgId paramRequestReadCrcExtra

instance MavlinkUnpackableMsg "param_request_read_msg" where
    unpackMsg = ( paramRequestReadUnpack , paramRequestReadMsgId )

paramRequestReadUnpack :: Def ('[ Ref s1 (Struct "param_request_read_msg")
                             , ConstRef s2 (CArray (Stored Uint8))
                             ] :-> () )
paramRequestReadUnpack = proc "mavlink_param_request_read_unpack" $ \ msg buf -> body $ unpackRef buf 0 msg

paramRequestReadPackRef :: Def ('[ Ref s1 (CArray (Stored Uint8))
                              , Uint32
                              , ConstRef s2 (Struct "param_request_read_msg")
                              ] :-> () )
paramRequestReadPackRef = proc "mavlink_param_request_read_pack_ref" $ \ buf off msg -> body $ do
  packRef buf (off + 0) (msg ~> param_index)
  packRef buf (off + 2) (msg ~> target_system)
  packRef buf (off + 3) (msg ~> target_component)
  packRef buf (off + 4) (msg ~> param_id)

paramRequestReadUnpackRef :: Def ('[ ConstRef s1 (CArray (Stored Uint8))
                                , Uint32
                                , Ref s2 (Struct "param_request_read_msg")
                                ] :-> () )
paramRequestReadUnpackRef = proc "mavlink_param_request_read_unpack_ref" $ \ buf off msg -> body $ do
  unpackRef buf (off + 0) (msg ~> param_index)
  unpackRef buf (off + 2) (msg ~> target_system)
  unpackRef buf (off + 3) (msg ~> target_component)
  unpackRef buf (off + 4) (msg ~> param_id)

instance SerializableRef (Struct "param_request_read_msg") where
  packRef = call_ paramRequestReadPackRef
  unpackRef = call_ paramRequestReadUnpackRef
