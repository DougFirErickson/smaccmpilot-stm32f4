{-# LANGUAGE DataKinds #-}
{-# LANGUAGE TypeOperators #-}
{-# LANGUAGE TypeFamilies #-}
{-# LANGUAGE FlexibleInstances #-}
{-# LANGUAGE FlexibleContexts #-}
{-# LANGUAGE QuasiQuotes #-}
{-# LANGUAGE MultiParamTypeClasses #-}

-- Autogenerated Mavlink v1.0 implementation: see smavgen_ivory.py

module SMACCMPilot.Mavlink.Messages.RawImu where

import Ivory.Language
import Ivory.Serialize
import SMACCMPilot.Mavlink.Send
import SMACCMPilot.Mavlink.Unpack

rawImuMsgId :: Uint8
rawImuMsgId = 27

rawImuCrcExtra :: Uint8
rawImuCrcExtra = 144

rawImuModule :: Module
rawImuModule = package "mavlink_raw_imu_msg" $ do
  depend serializeModule
  depend mavlinkSendModule
  incl mkRawImuSender
  incl rawImuUnpack
  defStruct (Proxy :: Proxy "raw_imu_msg")
  incl rawImuPackRef
  incl rawImuUnpackRef

[ivory|
struct raw_imu_msg
  { time_usec :: Stored Uint64
  ; xacc :: Stored Sint16
  ; yacc :: Stored Sint16
  ; zacc :: Stored Sint16
  ; xgyro :: Stored Sint16
  ; ygyro :: Stored Sint16
  ; zgyro :: Stored Sint16
  ; xmag :: Stored Sint16
  ; ymag :: Stored Sint16
  ; zmag :: Stored Sint16
  }
|]

mkRawImuSender ::
  Def ('[ ConstRef s0 (Struct "raw_imu_msg")
        , Ref s1 (Stored Uint8) -- seqNum
        , Ref s1 (Struct "mavlinkPacket") -- tx buffer/length
        ] :-> ())
mkRawImuSender = makeMavlinkSender "raw_imu_msg" rawImuMsgId rawImuCrcExtra

instance MavlinkUnpackableMsg "raw_imu_msg" where
    unpackMsg = ( rawImuUnpack , rawImuMsgId )

rawImuUnpack :: Def ('[ Ref s1 (Struct "raw_imu_msg")
                             , ConstRef s2 (CArray (Stored Uint8))
                             ] :-> () )
rawImuUnpack = proc "mavlink_raw_imu_unpack" $ \ msg buf -> body $ unpackRef buf 0 msg

rawImuPackRef :: Def ('[ Ref s1 (CArray (Stored Uint8))
                              , Uint32
                              , ConstRef s2 (Struct "raw_imu_msg")
                              ] :-> () )
rawImuPackRef = proc "mavlink_raw_imu_pack_ref" $ \ buf off msg -> body $ do
  packRef buf (off + 0) (msg ~> time_usec)
  packRef buf (off + 8) (msg ~> xacc)
  packRef buf (off + 10) (msg ~> yacc)
  packRef buf (off + 12) (msg ~> zacc)
  packRef buf (off + 14) (msg ~> xgyro)
  packRef buf (off + 16) (msg ~> ygyro)
  packRef buf (off + 18) (msg ~> zgyro)
  packRef buf (off + 20) (msg ~> xmag)
  packRef buf (off + 22) (msg ~> ymag)
  packRef buf (off + 24) (msg ~> zmag)

rawImuUnpackRef :: Def ('[ ConstRef s1 (CArray (Stored Uint8))
                                , Uint32
                                , Ref s2 (Struct "raw_imu_msg")
                                ] :-> () )
rawImuUnpackRef = proc "mavlink_raw_imu_unpack_ref" $ \ buf off msg -> body $ do
  unpackRef buf (off + 0) (msg ~> time_usec)
  unpackRef buf (off + 8) (msg ~> xacc)
  unpackRef buf (off + 10) (msg ~> yacc)
  unpackRef buf (off + 12) (msg ~> zacc)
  unpackRef buf (off + 14) (msg ~> xgyro)
  unpackRef buf (off + 16) (msg ~> ygyro)
  unpackRef buf (off + 18) (msg ~> zgyro)
  unpackRef buf (off + 20) (msg ~> xmag)
  unpackRef buf (off + 22) (msg ~> ymag)
  unpackRef buf (off + 24) (msg ~> zmag)

instance SerializableRef (Struct "raw_imu_msg") where
  packRef = call_ rawImuPackRef
  unpackRef = call_ rawImuUnpackRef
