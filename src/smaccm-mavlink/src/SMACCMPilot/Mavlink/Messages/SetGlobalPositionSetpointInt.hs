{-# LANGUAGE DataKinds #-}
{-# LANGUAGE TypeOperators #-}
{-# LANGUAGE TypeFamilies #-}
{-# LANGUAGE FlexibleInstances #-}
{-# LANGUAGE FlexibleContexts #-}
{-# LANGUAGE QuasiQuotes #-}
{-# LANGUAGE MultiParamTypeClasses #-}

-- Autogenerated Mavlink v1.0 implementation: see smavgen_ivory.py

module SMACCMPilot.Mavlink.Messages.SetGlobalPositionSetpointInt where

import Ivory.Language
import Ivory.Serialize
import SMACCMPilot.Mavlink.Send
import SMACCMPilot.Mavlink.Unpack

setGlobalPositionSetpointIntMsgId :: Uint8
setGlobalPositionSetpointIntMsgId = 53

setGlobalPositionSetpointIntCrcExtra :: Uint8
setGlobalPositionSetpointIntCrcExtra = 33

setGlobalPositionSetpointIntModule :: Module
setGlobalPositionSetpointIntModule = package "mavlink_set_global_position_setpoint_int_msg" $ do
  depend serializeModule
  depend mavlinkSendModule
  incl mkSetGlobalPositionSetpointIntSender
  incl setGlobalPositionSetpointIntUnpack
  defStruct (Proxy :: Proxy "set_global_position_setpoint_int_msg")
  incl setGlobalPositionSetpointIntPackRef
  incl setGlobalPositionSetpointIntUnpackRef

[ivory|
struct set_global_position_setpoint_int_msg
  { latitude :: Stored Sint32
  ; longitude :: Stored Sint32
  ; altitude :: Stored Sint32
  ; yaw :: Stored Sint16
  ; coordinate_frame :: Stored Uint8
  }
|]

mkSetGlobalPositionSetpointIntSender ::
  Def ('[ ConstRef s0 (Struct "set_global_position_setpoint_int_msg")
        , Ref s1 (Stored Uint8) -- seqNum
        , Ref s1 (Struct "mavlinkPacket") -- tx buffer/length
        ] :-> ())
mkSetGlobalPositionSetpointIntSender = makeMavlinkSender "set_global_position_setpoint_int_msg" setGlobalPositionSetpointIntMsgId setGlobalPositionSetpointIntCrcExtra

instance MavlinkUnpackableMsg "set_global_position_setpoint_int_msg" where
    unpackMsg = ( setGlobalPositionSetpointIntUnpack , setGlobalPositionSetpointIntMsgId )

setGlobalPositionSetpointIntUnpack :: Def ('[ Ref s1 (Struct "set_global_position_setpoint_int_msg")
                             , ConstRef s2 (CArray (Stored Uint8))
                             ] :-> () )
setGlobalPositionSetpointIntUnpack = proc "mavlink_set_global_position_setpoint_int_unpack" $ \ msg buf -> body $ unpackRef buf 0 msg

setGlobalPositionSetpointIntPackRef :: Def ('[ Ref s1 (CArray (Stored Uint8))
                              , Uint32
                              , ConstRef s2 (Struct "set_global_position_setpoint_int_msg")
                              ] :-> () )
setGlobalPositionSetpointIntPackRef = proc "mavlink_set_global_position_setpoint_int_pack_ref" $ \ buf off msg -> body $ do
  packRef buf (off + 0) (msg ~> latitude)
  packRef buf (off + 4) (msg ~> longitude)
  packRef buf (off + 8) (msg ~> altitude)
  packRef buf (off + 12) (msg ~> yaw)
  packRef buf (off + 14) (msg ~> coordinate_frame)

setGlobalPositionSetpointIntUnpackRef :: Def ('[ ConstRef s1 (CArray (Stored Uint8))
                                , Uint32
                                , Ref s2 (Struct "set_global_position_setpoint_int_msg")
                                ] :-> () )
setGlobalPositionSetpointIntUnpackRef = proc "mavlink_set_global_position_setpoint_int_unpack_ref" $ \ buf off msg -> body $ do
  unpackRef buf (off + 0) (msg ~> latitude)
  unpackRef buf (off + 4) (msg ~> longitude)
  unpackRef buf (off + 8) (msg ~> altitude)
  unpackRef buf (off + 12) (msg ~> yaw)
  unpackRef buf (off + 14) (msg ~> coordinate_frame)

instance SerializableRef (Struct "set_global_position_setpoint_int_msg") where
  packRef = call_ setGlobalPositionSetpointIntPackRef
  unpackRef = call_ setGlobalPositionSetpointIntUnpackRef
