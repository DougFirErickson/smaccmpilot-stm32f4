{-# LANGUAGE DataKinds #-}
{-# LANGUAGE TypeOperators #-}
{-# LANGUAGE TypeFamilies #-}
{-# LANGUAGE FlexibleInstances #-}
{-# LANGUAGE FlexibleContexts #-}
{-# LANGUAGE QuasiQuotes #-}
{-# LANGUAGE MultiParamTypeClasses #-}

-- Autogenerated Mavlink v1.0 implementation: see smavgen_ivory.py

module SMACCMPilot.Mavlink.Messages.ParamRequestList where

import Ivory.Language
import Ivory.Serialize
import SMACCMPilot.Mavlink.Send
import SMACCMPilot.Mavlink.Unpack

paramRequestListMsgId :: Uint8
paramRequestListMsgId = 21

paramRequestListCrcExtra :: Uint8
paramRequestListCrcExtra = 159

paramRequestListModule :: Module
paramRequestListModule = package "mavlink_param_request_list_msg" $ do
  depend serializeModule
  depend mavlinkSendModule
  incl mkParamRequestListSender
  incl paramRequestListUnpack
  defStruct (Proxy :: Proxy "param_request_list_msg")
  incl paramRequestListPackRef
  incl paramRequestListUnpackRef

[ivory|
struct param_request_list_msg
  { target_system :: Stored Uint8
  ; target_component :: Stored Uint8
  }
|]

mkParamRequestListSender ::
  Def ('[ ConstRef s0 (Struct "param_request_list_msg")
        , Ref s1 (Stored Uint8) -- seqNum
        , Ref s1 (Struct "mavlinkPacket") -- tx buffer/length
        ] :-> ())
mkParamRequestListSender = makeMavlinkSender "param_request_list_msg" paramRequestListMsgId paramRequestListCrcExtra

instance MavlinkUnpackableMsg "param_request_list_msg" where
    unpackMsg = ( paramRequestListUnpack , paramRequestListMsgId )

paramRequestListUnpack :: Def ('[ Ref s1 (Struct "param_request_list_msg")
                             , ConstRef s2 (CArray (Stored Uint8))
                             ] :-> () )
paramRequestListUnpack = proc "mavlink_param_request_list_unpack" $ \ msg buf -> body $ unpackRef buf 0 msg

paramRequestListPackRef :: Def ('[ Ref s1 (CArray (Stored Uint8))
                              , Uint32
                              , ConstRef s2 (Struct "param_request_list_msg")
                              ] :-> () )
paramRequestListPackRef = proc "mavlink_param_request_list_pack_ref" $ \ buf off msg -> body $ do
  packRef buf (off + 0) (msg ~> target_system)
  packRef buf (off + 1) (msg ~> target_component)

paramRequestListUnpackRef :: Def ('[ ConstRef s1 (CArray (Stored Uint8))
                                , Uint32
                                , Ref s2 (Struct "param_request_list_msg")
                                ] :-> () )
paramRequestListUnpackRef = proc "mavlink_param_request_list_unpack_ref" $ \ buf off msg -> body $ do
  unpackRef buf (off + 0) (msg ~> target_system)
  unpackRef buf (off + 1) (msg ~> target_component)

instance SerializableRef (Struct "param_request_list_msg") where
  packRef = call_ paramRequestListPackRef
  unpackRef = call_ paramRequestListUnpackRef
